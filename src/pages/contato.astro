---
import Layout from '../layouts/Layout.astro';
import { getAboutData } from '../lib/supabase';
import FormField from '../components/FormField.astro';
import EnhancedButton from '../components/EnhancedButton.astro';
import ToastNotification from '../components/ToastNotification.astro';

const aboutData = await getAboutData();

// Dados padrão caso não haja dados no Supabase
const defaultData = {
	socialLinks: {
		city: 'São Paulo, SP',
		phone: '+55 (11) 99999-9999'
	}
};

// Usar dados do Supabase ou dados padrão
const data = aboutData || defaultData;
---

<Layout title="Contato - Ítalo Antonio" description="Entre em contato com Ítalo Antonio para projetos e oportunidades de desenvolvimento">
	<!-- Hero Section -->
	<section class="pt-32 pb-20 bg-gradient-to-br from-gray-950 via-gray-900 to-gray-950">
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
			<h1 class="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
				Entre em Contato
			</h1>
			<p class="text-xl text-gray-400 max-w-2xl mx-auto">
				Vamos conversar sobre projetos, oportunidades ou apenas trocar ideias sobre tecnologia e desenvolvimento!
			</p>
		</div>
	</section>

	<!-- Contact Section -->
	<section class="py-20 bg-gray-950">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
				<!-- Contact Form -->
				<div class="bg-gray-800/50 backdrop-blur-sm rounded-xl p-8 border border-gray-700/50">
					<h2 class="text-2xl font-bold text-white mb-6">Envie uma Mensagem</h2>
					<form id="contact-form" class="space-y-6">
						<div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
							<FormField
								type="text"
								name="name"
								label="Nome"
								placeholder="Seu nome"
								required={true}
								icon={`<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path></svg>`}
							/>
							<FormField
								type="email"
								name="email"
								label="Email"
								placeholder="seu@email.com"
								required={true}
								icon={`<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg>`}
							/>
						</div>

						<FormField
							type="text"
							name="subject"
							label="Assunto"
							placeholder="Assunto da mensagem"
							required={true}
							icon={`<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path></svg>`}
						/>

						<FormField
							type="textarea"
							name="message"
							label="Mensagem"
							placeholder="Conte-me sobre seu projeto ou ideia..."
							required={true}
							rows={6}
							icon={`<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path></svg>`}
						/>

						<div class="flex justify-end">
							<EnhancedButton
								text="Enviar Mensagem"
								type="submit"
								size="lg"
								variant="primary"
								icon={`<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path></svg>`}
								icon-position="right"
							/>
						</div>
					</form>

					<div id="form-message" class="mt-4 hidden"></div>
				</div>

				<!-- Contact Info -->
				<div class="space-y-8">
					<div>
						<h2 class="text-2xl font-bold text-white mb-6">Informações de Contato</h2>
						<div class="space-y-6">
							<div class="flex items-start gap-4">
								<div class="w-12 h-12 bg-gradient-to-r from-primary-500 to-accent-cyan rounded-lg flex items-center justify-center flex-shrink-0">
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
									</svg>
								</div>
								<div>
									<h3 class="text-lg font-semibold text-white mb-1">Email</h3>
									<a href="mailto:contato@italoantonio.dev" class="text-primary-400 hover:text-primary-300 transition-colors duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-400" aria-label="Enviar email para contato@italoantonio.dev" tabindex="0" role="link">
										contato@italoantonio.dev
									</a>
									<p class="text-gray-400 text-sm mt-1">Resposta em até 24 horas</p>
								</div>
							</div>

							<div class="flex items-start gap-4">
								<div class="w-12 h-12 bg-gradient-to-r from-accent-cyan to-accent-blue rounded-lg flex items-center justify-center flex-shrink-0">
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
									</svg>
								</div>
								<div>
									<h3 class="text-lg font-semibold text-white mb-1">Telefone</h3>
									<a href={`tel:${data.socialLinks?.phone || '+55 (11) 99999-9999'}`} class="text-primary-400 hover:text-primary-300 transition-colors duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-400" aria-label={`Ligar para ${data.socialLinks?.phone || '+55 (11) 99999-9999'}`} tabindex="0" role="link">
										{data.socialLinks?.phone || '+55 (11) 99999-9999'}
									</a>
									<p class="text-gray-400 text-sm mt-1">Disponível para contato</p>
								</div>
							</div>

							<div class="flex items-start gap-4">
								<div class="w-12 h-12 bg-gradient-to-r from-accent-indigo to-accent-blue rounded-lg flex items-center justify-center flex-shrink-0">
									<svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
										<path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
									</svg>
								</div>
								<div>
									<h3 class="text-lg font-semibold text-white mb-1">GitHub</h3>
									<a href="https://github.com/italoantonio" target="_blank" rel="noopener" class="text-primary-400 hover:text-primary-300 transition-colors duration-200">
										github.com/italoantonio
									</a>
									<p class="text-gray-400 text-sm mt-1">Veja meus projetos open source</p>
								</div>
							</div>

							<div class="flex items-start gap-4">
								<div class="w-12 h-12 bg-gradient-to-r from-accent-cyan to-accent-blue rounded-lg flex items-center justify-center flex-shrink-0">
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
									</svg>
								</div>
								<div>
									<h3 class="text-lg font-semibold text-white mb-1">Localização</h3>
									<p class="text-gray-300">{data.socialLinks?.city || 'São Paulo, SP'} - Brasil</p>
									<p class="text-gray-400 text-sm mt-1">Disponível para projetos remotos</p>
								</div>
							</div>
						</div>
					</div>

					<!-- Availability Status -->
					<div class="bg-gradient-to-r from-green-900/20 to-green-800/20 p-6 rounded-xl border border-green-700/30">
						<div class="flex items-center gap-3 mb-3">
							<div class="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
							<h3 class="text-lg font-semibold text-white">Disponibilidade</h3>
						</div>
						<p class="text-gray-300 mb-2">
							<strong>Atualmente disponível</strong> para novos projetos e oportunidades.
						</p>
						<p class="text-gray-400 text-sm">
							Tempo de resposta: 24-48 horas • Preferência por projetos de médio/longo prazo
						</p>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- FAQ Section -->
	<section class="py-20 bg-gray-900/50">
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
					Perguntas Frequentes
				</h2>
				<p class="text-gray-400 text-lg">
					Tire suas dúvidas antes de entrar em contato
				</p>
			</div>

			<div class="space-y-6">
				{[
					{
						question: 'Qual é o seu processo de trabalho?',
						answer: 'Começo com uma conversa para entender suas necessidades, depois envio uma proposta detalhada com escopo, prazo e orçamento. Após aprovação, trabalho de forma transparente com atualizações regulares.'
					},
					{
						question: 'Você trabalha com projetos freelancers?',
						answer: 'Sim! Aceito projetos freelancers de desenvolvimento web, desde landing pages até aplicações complexas. Também estou disponível para consultorias técnicas.'
					},
					{
						question: 'Quais tecnologias você utiliza?',
						answer: 'Trabalho principalmente com React, Next.js, Node.js, TypeScript, PostgreSQL e Supabase. Também tenho experiência com Vue.js, Python, Docker e cloud services.'
					},
					{
						question: 'Como funciona o orçamento dos projetos?',
						answer: 'O orçamento varia conforme a complexidade e escopo do projeto. Para projetos menores, cobro por hora. Para projetos maiores, prefiro orçamentos fixos com milestones definidos.'
					}
				].map((faq, index: number) => (
					<div class="bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50">
						<h3 class="text-lg font-semibold text-white mb-3">{faq.question}</h3>
						<p class="text-gray-400 leading-relaxed">{faq.answer}</p>
					</div>
				))}
			</div>
		</div>
	</section>

	<script>
		import '../lib/feedback-system.js';

		document.addEventListener('DOMContentLoaded', function() {
			const form = document.getElementById('contact-form') as HTMLFormElement;
			const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;

			function validateForm() {
				const fields = ['name', 'email', 'subject', 'message'];
				let isValid = true;

				fields.forEach(fieldName => {
					const field = document.getElementById(fieldName) as HTMLInputElement;
					const formField = field.closest('.form-field-group');

					if (field && formField) {
						if (!field.value.trim()) {
							formField.classList.add('error');
							field.setAttribute('aria-invalid', 'true');
							isValid = false;
						} else {
							formField.classList.remove('error');
							formField.classList.add('success');
							field.setAttribute('aria-invalid', 'false');
						}
					}
				});

				// Email validation
				const emailField = document.getElementById('email') as HTMLInputElement;
				const emailFormField = emailField?.closest('.form-field-group');
				if (emailField && emailFormField && emailField.value) {
					const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
					if (!emailRegex.test(emailField.value)) {
						emailFormField.classList.add('error');
						emailFormField.classList.remove('success');
						emailField.setAttribute('aria-invalid', 'true');
						isValid = false;
					}
				}

				return isValid;
			}

			function resetFormValidation() {
				const formFields = document.querySelectorAll('.form-field-group');
				formFields.forEach(field => {
					field.classList.remove('error', 'success');
					const input = field.querySelector('input, textarea');
					if (input) {
						input.setAttribute('aria-invalid', 'false');
					}
				});
			}

			if (form) {
				form.addEventListener('submit', async function(e) {
					e.preventDefault();

					// Reset previous validation
					resetFormValidation();

					// Validate form
					if (!validateForm()) {
						window.showToast('Por favor, preencha todos os campos corretamente.', 'error');
						return;
					}

					// Show loading state
					window.showLoading('Enviando mensagem...');

					try {
						const formData = new FormData(form);

						// Simulate API call delay
						await new Promise(resolve => setTimeout(resolve, 2000));

						// Simulate form submission
						window.showToast('Mensagem enviada com sucesso! Entrarei em contato em breve.', 'success');
						form.reset();
						resetFormValidation();

						// Scroll to top for better UX
						window.scrollTo({ top: 0, behavior: 'smooth' });

					} catch (error) {
						window.showToast('Erro ao enviar mensagem. Tente novamente.', 'error');
					} finally {
						window.hideLoading();
					}
				});

				// Real-time validation
				const inputs = form.querySelectorAll('input, textarea');
				inputs.forEach(input => {
					input.addEventListener('blur', function(this: HTMLInputElement) {
						const formField = this.closest('.form-field-group');
						if (formField) {
							if (!this.value.trim()) {
								formField.classList.add('error');
								formField.classList.remove('success');
								this.setAttribute('aria-invalid', 'true');
							} else {
								formField.classList.remove('error');
								formField.classList.add('success');
								this.setAttribute('aria-invalid', 'false');
							}
						}
					});

					input.addEventListener('input', function(this: HTMLInputElement) {
						const formField = this.closest('.form-field-group');
						if (formField && formField.classList.contains('error') && this.value.trim()) {
							formField.classList.remove('error');
							formField.classList.add('success');
							this.setAttribute('aria-invalid', 'false');
						}
					});
				});
			}

			// Add focus enhancements
			window.FeedbackSystem.addFocusEnhancement();
		});
	</script>
					<h3>Disponibilidade</h3>
					<p>
						Estou sempre aberto a discussões sobre novos projetos, 
						oportunidades de trabalho ou colaborações interessantes. 
						Respondo a emails normalmente em até 24 horas.
					</p>
				</div>
			</div>

			<div class="contact-form-section">
				<h2>Envie uma Mensagem</h2>
				<form class="contact-form" action="https://formspree.io/f/SEU_FORM_ID" method="POST">
					<div class="form-group">
						<label for="name">Nome</label>
						<input type="text" id="name" name="name" required>
					</div>
					
					<div class="form-group">
						<label for="email">Email</label>
						<input type="email" id="email" name="email" required>
					</div>
					
					<div class="form-group">
						<label for="subject">Assunto</label>
						<select id="subject" name="subject" required>
							<option value="">Selecione um assunto</option>
							<option value="projeto">Proposta de Projeto</option>
							<option value="trabalho">Oportunidade de Trabalho</option>
							<option value="colaboracao">Colaboração</option>
							<option value="feedback">Feedback sobre o Site/Blog</option>
							<option value="outro">Outro</option>
						</select>
					</div>
					
					<div class="form-group">
						<label for="message">Mensagem</label>
						<textarea id="message" name="message" rows="6" required placeholder="Conte-me mais sobre o que você tem em mente..."></textarea>
					</div>
					
					<button type="submit" class="btn btn-primary">Enviar Mensagem</button>
				</form>
			</div>
		</section>

		<section class="cta-section">
			<h2>Vamos Trabalhar Juntos?</h2>
			<p>
				Se você tem um projeto interessante ou está procurando um desenvolvedor 
				dedicado para sua equipe, adoraria ouvir sobre suas ideias!
			</p>
			<div class="cta-buttons">
				<a href="/blog" class="btn btn-outline">Ver Meus Posts</a>
				<a href="/sobre" class="btn btn-secondary">Sobre Mim</a>
			</div>
		</section>
	</div>
</Layout>

<style>
	.contact-hero {
		text-align: center;
		padding: 3rem 0 4rem;
	}

	.contact-hero h1 {
		font-size: 3rem;
		margin-bottom: 1rem;
		background: linear-gradient(45deg, #af40ff, #5b42f3, #00ddeb);
		background-size: 400% 400%;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
		animation: gradient 3s ease infinite;
	}

	@keyframes gradient {
		0% { background-position: 0% 50%; }
		50% { background-position: 100% 50%; }
		100% { background-position: 0% 50%; }
	}

	.contact-hero p {
		font-size: 1.2rem;
		color: rgba(255, 255, 255, 0.7);
		max-width: 600px;
		margin: 0 auto;
	}

	.contact-content {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 4rem;
		margin: 3rem 0 5rem;
	}

	.contact-info h2,
	.contact-form-section h2 {
		font-size: 1.8rem;
		margin-bottom: 2rem;
		color: white;
	}

	.contact-methods {
		margin-bottom: 3rem;
	}

	.contact-method {
		display: flex;
		align-items: center;
		gap: 1rem;
		padding: 1.5rem;
		margin-bottom: 1rem;
		background: rgba(255, 255, 255, 0.05);
		border-radius: 12px;
		border: 1px solid rgba(255, 255, 255, 0.1);
		transition: all 0.3s ease;
	}

	.contact-method:hover {
		background: rgba(255, 255, 255, 0.08);
		transform: translateY(-2px);
	}

	.contact-icon {
		font-size: 2rem;
		width: 50px;
		height: 50px;
		display: flex;
		align-items: center;
		justify-content: center;
		background: rgba(175, 64, 255, 0.2);
		border-radius: 12px;
		flex-shrink: 0;
	}

	.contact-details h3 {
		margin-bottom: 0.5rem;
		color: white;
		font-size: 1.1rem;
	}

	.contact-details a {
		color: #af40ff;
		text-decoration: none;
		transition: color 0.3s ease;
	}

	.contact-details a:hover {
		color: #00ddeb;
	}

	.availability {
		padding: 2rem;
		background: rgba(175, 64, 255, 0.1);
		border-radius: 12px;
		border: 1px solid rgba(175, 64, 255, 0.2);
	}

	.availability h3 {
		margin-bottom: 1rem;
		color: #af40ff;
		font-size: 1.2rem;
	}

	.availability p {
		color: rgba(255, 255, 255, 0.8);
		line-height: 1.6;
	}

	/* Contact Form */
	.contact-form {
		background: rgba(255, 255, 255, 0.05);
		padding: 2.5rem;
		border-radius: 16px;
		border: 1px solid rgba(255, 255, 255, 0.1);
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

	.form-group label {
		display: block;
		margin-bottom: 0.5rem;
		color: rgba(255, 255, 255, 0.9);
		font-weight: 600;
	}

	.form-group input,
	.form-group select,
	.form-group textarea {
		width: 100%;
		padding: 1rem;
		border: 2px solid rgba(255, 255, 255, 0.1);
		border-radius: 8px;
		background: rgba(255, 255, 255, 0.05);
		color: white;
		font-size: 1rem;
		transition: border-color 0.3s ease;
	}

	.form-group input:focus,
	.form-group select:focus,
	.form-group textarea:focus {
		outline: none;
		border-color: #af40ff;
	}

	.form-group textarea {
		resize: vertical;
		font-family: inherit;
	}

	/* CTA Section */
	.cta-section {
		text-align: center;
		padding: 4rem 0;
		background: rgba(255, 255, 255, 0.02);
		border-radius: 20px;
		border: 1px solid rgba(255, 255, 255, 0.05);
		margin: 2rem 0;
	}

	.cta-section h2 {
		font-size: 2.2rem;
		margin-bottom: 1rem;
		color: white;
	}

	.cta-section p {
		font-size: 1.1rem;
		color: rgba(255, 255, 255, 0.7);
		max-width: 600px;
		margin: 0 auto 2.5rem;
		line-height: 1.6;
	}

	.cta-buttons {
		display: flex;
		gap: 1rem;
		justify-content: center;
		flex-wrap: wrap;
	}

	/* Buttons */
	.btn {
		display: inline-block;
		padding: 1rem 2rem;
		border-radius: 8px;
		text-decoration: none;
		font-weight: 600;
		transition: all 0.3s ease;
		border: 2px solid transparent;
		cursor: pointer;
		font-size: 1rem;
	}

	.btn-primary {
		background: linear-gradient(45deg, #af40ff, #5b42f3);
		color: white;
		border: none;
	}

	.btn-primary:hover {
		transform: translateY(-2px);
		box-shadow: 0 10px 30px rgba(175, 64, 255, 0.3);
	}

	.btn-secondary {
		background: rgba(255, 255, 255, 0.1);
		color: white;
		border: 2px solid rgba(255, 255, 255, 0.2);
	}

	.btn-secondary:hover {
		background: rgba(255, 255, 255, 0.2);
		transform: translateY(-2px);
	}

	.btn-outline {
		background: transparent;
		color: #af40ff;
		border: 2px solid #af40ff;
	}

	.btn-outline:hover {
		background: #af40ff;
		color: white;
	}

	/* Responsive */
	@media (max-width: 768px) {
		.contact-hero h1 {
			font-size: 2.5rem;
		}

		.contact-content {
			grid-template-columns: 1fr;
			gap: 3rem;
		}

		.contact-form {
			padding: 2rem;
		}

		.cta-buttons {
			flex-direction: column;
			align-items: center;
		}

		.btn {
			width: 250px;
		}

		.contact-method {
			flex-direction: column;
			text-align: center;
			gap: 1rem;
		}
	}
</style>

<script>
	// Adicionar feedback visual ao envio do formulário
	document.addEventListener('DOMContentLoaded', function() {
		const form = document.querySelector('.contact-form');
		const submitBtn = form?.querySelector('button[type="submit"]') as HTMLButtonElement;
		
		if (form && submitBtn) {
			form.addEventListener('submit', function() {
				submitBtn.textContent = 'Enviando...';
				submitBtn.disabled = true;
			});
		}
	});
</script>
