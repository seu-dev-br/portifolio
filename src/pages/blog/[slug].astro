---
import Layout from '../../layouts/Layout.astro';
// Log para depuração
console.log('DEBUG: slug recebido:', Astro.params.slug);
export const prerender = true;
import { getAllPostSlugs, getPostBySlug, formatDate, getReadingTime } from '../../lib/supabase.js';
import { marked } from 'marked';
import OptimizedImage from '../../components/OptimizedImage.astro';

export async function getStaticPaths() {
    const slugs = await getAllPostSlugs();
    
    const paths = await Promise.all(
        slugs.map(async (slug) => {
            const post = await getPostBySlug(slug);
            return {
                params: { slug },
                props: { post }
            };
        })
    );
    
    return paths;
}

const { post } = Astro.props;
console.log('DEBUG: post retornado:', post);
if (!post) {
    console.error('Post não encontrado para o slug:', Astro.params.slug);
    return Astro.redirect('/404');
}

// Convert markdown to HTML
const htmlContent = marked(post!.contentMarkdown || '');

// Configure marked options for better rendering
marked.setOptions({
    breaks: true,
    gfm: true,
});
---

<Layout 
    title={`${post!.title} - Ítalo Antonio`}
    description={post!.excerpt}
    image={post!.coverImage}
>
    <div class="container">
        <article class="blog-post">
            <!-- Post Header -->
            <header class="post-header">
                <nav class="breadcrumb">
                    <a href="/">Início</a>
                    <span>/</span>
                    <a href="/blog">Blog</a>
                    <span>/</span>
                    <span>{post!.title}</span>
                </nav>
                
                <h1>{post!.title}</h1>
                
                <div class="post-meta">
                    <div class="meta-item">
                        <time datetime={post!.publishedAt}>
                            Publicado em {formatDate(post!.publishedAt)}
                        </time>
                    </div>
                    <div class="meta-item">
                        <span class="reading-time">
                            {getReadingTime(post!.contentMarkdown)} de leitura
                        </span>
                    </div>
                </div>

                {post!.tags && post!.tags.length > 0 && (
                    <div class="post-tags">
                        {post!.tags.map((tag: string) => (
                            <span class="tag">{tag}</span>
                        ))}
                    </div>
                )}
            </header>

            <!-- Cover Image -->
            {post!.coverImage && (
                <div class="cover-image">
                    <OptimizedImage src={post!.coverImage} alt={post!.title} width={800} height={400} />
                </div>
            )}

            <!-- Post Content -->
            <div class="post-content">
                <!-- Table of Contents -->
                <div class="table-of-contents" id="toc" style="display: none;">
                    <h3>Índice</h3>
                    <ul id="toc-list"></ul>
                </div>
                
                <Fragment set:html={htmlContent} />
                
                <!-- Progress Bar -->
                <div class="reading-progress">
                    <div class="progress-bar" id="progress-bar"></div>
                </div>
            </div>

            <!-- Post Footer -->
            <footer class="post-footer">
                <div class="share-section">
                    <h3>Compartilhe este post</h3>
                    <div class="share-buttons">
                        <a 
                            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(post!.title)}&url=${encodeURIComponent(Astro.url.toString())}`}
                            target="_blank" 
                            rel="noopener"
                            class="share-btn twitter"
                        >
                            Twitter
                        </a>
                        <a 
                            href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.toString())}`}
                            target="_blank" 
                            rel="noopener"
                            class="share-btn linkedin"
                        >
                            LinkedIn
                        </a>
                        <a 
                            href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.toString())}`}
                            target="_blank" 
                            rel="noopener"
                            class="share-btn facebook"
                        >
                            Facebook
                        </a>
                    </div>
                </div>

                <div class="back-to-blog">
                    <a href="/blog" class="btn btn-outline">← Voltar para o Blog</a>
                </div>
            </footer>
        </article>
    </div>
</Layout>

<style>
    .blog-post {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem 0 4rem;
    }

    /* Breadcrumb */
    .breadcrumb {
        margin-bottom: 2rem;
        font-size: 0.9rem;
        color: rgba(255, 255, 255, 0.6);
    }

    .breadcrumb a {
        color: #af40ff;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .breadcrumb a:hover {
        color: #5b42f3;
    }

    .breadcrumb span {
        margin: 0 0.5rem;
        color: rgba(255, 255, 255, 0.4);
    }

    /* Post Header */
    .post-header {
        margin-bottom: 3rem;
    }

    .post-header h1 {
        font-size: 2.8rem;
        line-height: 1.2;
        margin: 1rem 0 2rem;
        background: linear-gradient(45deg, #af40ff, #5b42f3, #00ddeb);
        background-size: 400% 400%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: gradient 3s ease infinite;
    }

    @keyframes gradient {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
    }

    .post-meta {
        display: flex;
        gap: 2rem;
        margin-bottom: 1.5rem;
        color: rgba(255, 255, 255, 0.6);
        font-size: 0.95rem;
        flex-wrap: wrap;
    }

    .post-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.7rem;
    }

    .tag {
        background: rgba(175, 64, 255, 0.2);
        color: #af40ff;
        padding: 0.4rem 1rem;
        border-radius: 25px;
        font-size: 0.85rem;
        font-weight: 500;
        border: 1px solid rgba(175, 64, 255, 0.3);
    }

    /* Cover Image */
    .cover-image {
        width: 100%;
        margin: 2rem 0 3rem;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    }

    .cover-image img {
        width: 100%;
        height: auto;
        display: block;
    }

    /* Post Content */
    .post-content {
        line-height: 1.8;
        font-size: 1.1rem;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 4rem;
    }

    /* Markdown Content Styles */
    .post-content :global(h2) {
        font-size: 2rem;
        margin: 2.5rem 0 1rem;
        color: white;
        border-bottom: 2px solid rgba(175, 64, 255, 0.3);
        padding-bottom: 0.5rem;
    }

    .post-content :global(h3) {
        font-size: 1.6rem;
        margin: 2rem 0 1rem;
        color: #af40ff;
    }

    .post-content :global(h4) {
        font-size: 1.3rem;
        margin: 1.5rem 0 0.5rem;
        color: rgba(255, 255, 255, 0.9);
    }

    .post-content :global(p) {
        margin-bottom: 1.5rem;
    }

    .post-content :global(a) {
        color: #00ddeb;
        text-decoration: underline;
        transition: color 0.3s ease;
    }

    .post-content :global(a:hover) {
        color: #af40ff;
    }

    .post-content :global(strong) {
        color: white;
        font-weight: 700;
    }

    .post-content :global(em) {
        color: rgba(255, 255, 255, 0.8);
        font-style: italic;
    }

    .post-content :global(blockquote) {
        border-left: 4px solid #af40ff;
        padding: 1rem 1.5rem;
        margin: 2rem 0;
        background: rgba(175, 64, 255, 0.1);
        border-radius: 0 8px 8px 0;
        font-style: italic;
    }

    .post-content :global(code) {
        background: rgba(255, 255, 255, 0.1);
        padding: 0.2rem 0.4rem;
        border-radius: 4px;
        font-family: 'Courier New', monospace;
        font-size: 0.9em;
        color: #00ddeb;
    }

    .post-content :global(pre) {
        background: rgba(0, 0, 0, 0.3);
        padding: 1.5rem;
        border-radius: 8px;
        overflow-x: auto;
        margin: 2rem 0;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .post-content :global(pre code) {
        background: none;
        padding: 0;
        color: rgba(255, 255, 255, 0.9);
    }

    .post-content :global(ul),
    .post-content :global(ol) {
        margin: 1.5rem 0;
        padding-left: 2rem;
    }

    .post-content :global(li) {
        margin-bottom: 0.5rem;
    }

    .post-content :global(img) {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        margin: 2rem auto;
        display: block;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    }

    .post-content :global(table) {
        width: 100%;
        border-collapse: collapse;
        margin: 2rem 0;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 8px;
        overflow: hidden;
    }

    .post-content :global(th),
    .post-content :global(td) {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .post-content :global(th) {
        background: rgba(175, 64, 255, 0.2);
        font-weight: 600;
        color: white;
    }

    /* Post Footer */
    .post-footer {
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        padding-top: 3rem;
    }

    .share-section {
        margin-bottom: 3rem;
    }

    .share-section h3 {
        margin-bottom: 1rem;
        color: rgba(255, 255, 255, 0.8);
        font-size: 1.2rem;
    }

    .share-buttons {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .share-btn {
        display: inline-block;
        padding: 0.7rem 1.2rem;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        border: 1px solid transparent;
    }

    .share-btn.twitter {
        background: #1da1f2;
        color: white;
    }

    .share-btn.linkedin {
        background: #0077b5;
        color: white;
    }

    .share-btn.facebook {
        background: #1877f2;
        color: white;
    }

    .share-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .back-to-blog {
        text-align: center;
    }

    .btn {
        display: inline-block;
        padding: 1rem 2rem;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .btn-outline {
        background: transparent;
        color: #af40ff;
        border: 2px solid #af40ff;
    }

    .btn-outline:hover {
        background: #af40ff;
        color: white;
        transform: translateY(-2px);
    }

    /* Responsive */
    @media (max-width: 768px) {
        .blog-post {
            padding: 1rem 0 3rem;
        }

        .post-header h1 {
            font-size: 2.2rem;
        }

        .post-meta {
            flex-direction: column;
            gap: 0.5rem;
        }

        .post-content {
            font-size: 1rem;
        }

        .post-content :global(h2) {
            font-size: 1.6rem;
        }

        .post-content :global(h3) {
            font-size: 1.4rem;
        }

        .share-buttons {
            justify-content: center;
        }
    }

    /* Table of Contents */
    .table-of-contents {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 1.5rem;
        margin: 2rem 0;
        backdrop-filter: blur(10px);
    }

    .table-of-contents h3 {
        margin: 0 0 1rem 0;
        font-size: 1.2rem;
        color: #af40ff;
    }

    .table-of-contents ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .table-of-contents li {
        margin: 0.5rem 0;
    }

    .table-of-contents a {
        color: rgba(255, 255, 255, 0.7);
        text-decoration: none;
        transition: color 0.3s ease;
        padding: 0.25rem 0;
        display: block;
    }

    .table-of-contents a:hover,
    .table-of-contents a.active {
        color: #af40ff;
    }

    /* Reading Progress */
    .reading-progress {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: rgba(255, 255, 255, 0.1);
        z-index: 1000;
    }

    .progress-bar {
        height: 100%;
        background: linear-gradient(90deg, #af40ff, #5b42f3, #00ddeb);
        width: 0%;
        transition: width 0.3s ease;
    }
</style>

<script>
    // Blog post enhancements
    document.addEventListener('DOMContentLoaded', function() {
        // Generate Table of Contents
        generateTableOfContents();
        
        // Setup reading progress
        setupReadingProgress();
        
        // Setup smooth scrolling for TOC links
        setupSmoothScrolling();
    });

    function generateTableOfContents() {
        const headings = document.querySelectorAll('.post-content h2, .post-content h3');
        const toc = document.getElementById('toc');
        const tocList = document.getElementById('toc-list');
        
        if (headings.length > 2 && toc && tocList) {
            headings.forEach((heading, index) => {
                // Add ID to heading if it doesn't have one
                if (!heading.id) {
                    heading.id = 'heading-' + index;
                }
                
                const li = document.createElement('li');
                const a = document.createElement('a');
                a.href = '#' + heading.id;
                a.textContent = heading.textContent;
                a.className = heading.tagName.toLowerCase() === 'h3' ? 'sub-heading' : '';
                
                li.appendChild(a);
                tocList.appendChild(li);
            });
            
            toc.style.display = 'block';
        }
    }

    function setupReadingProgress() {
        const progressBar = document.getElementById('progress-bar');
        
        if (progressBar) {
            window.addEventListener('scroll', function() {
                const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
                const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
                const scrolled = (winScroll / height) * 100;
                
                progressBar.style.width = scrolled + '%';
            });
        }
    }

    function setupSmoothScrolling() {
        const tocLinks = document.querySelectorAll('.table-of-contents a');
        
        tocLinks.forEach(link => {
            link.addEventListener('click', function(this: HTMLElement, e: Event) {
                e.preventDefault();
                const targetId = this.getAttribute('href')?.substring(1) || '';
                const targetElement = document.getElementById(targetId);
                
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                    
                    // Update active link
                    tocLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                }
            });
        });
        
        // Update active TOC link on scroll
        window.addEventListener('scroll', function() {
            const headings = document.querySelectorAll('.post-content h2, .post-content h3');
            let current = '';
            
            headings.forEach(heading => {
                const sectionTop = (heading as HTMLElement).offsetTop - 100;
                if (window.pageYOffset >= sectionTop) {
                    current = heading.id;
                }
            });
            
            tocLinks.forEach(link => {
                link.classList.remove('active');
                const href = link.getAttribute('href');
                if (href && href.substring(1) === current) {
                    link.classList.add('active');
                }
            });
        });
    }
</script>
