---
import Layout from '../layouts/Layout.astro';
import { getAboutData } from '../lib/supabase';
import type { GalleryItem } from '../lib/types';
import OptimizedImage from '../components/OptimizedImage.astro';

const aboutData = await getAboutData();

// Dados padrão caso não haja dados no Supabase
const defaultData = {
	bio: 'Olá! Sou um desenvolvedor Full Stack apaixonado por criar soluções digitais inovadoras.',
	profileImage: '',
	skills: {
		frontend: ['HTML5', 'CSS3', 'JavaScript', 'React', 'Vue.js', 'TypeScript'],
		backend: ['Node.js', 'Python', 'PHP', 'Express.js', 'PostgreSQL'],
		database: ['MySQL', 'PostgreSQL', 'MongoDB'],
		tools: ['Git', 'Docker', 'AWS', 'Figma', 'VS Code']
	},
	experience: [
		{
			year: '2024',
			position: 'Desenvolvedor Full Stack',
			company: 'Empresa Atual',
			description: 'Desenvolvimento de aplicações web modernas e escaláveis.'
		}
	],
	education: [
		{
			institution: 'Universidade',
			course: 'Ciência da Computação',
			period: '2020 - 2024'
		}
	],
	certifications: [
		{
			name: 'Certificado Exemplo',
			issuer: 'Plataforma',
			date: '2024',
			description: 'Descrição da certificação',
			image: ''
		}
	],
	gallery: [
		{
			title: 'Projeto Exemplo',
			image: '',
			description: 'Descrição da imagem'
		}
	],
	socialLinks: {
		github: 'https://github.com/seu-usuario',
		linkedin: '',
		twitter: '',
		email: 'contato@exemplo.com',
		city: 'São Paulo, SP',
		phone: '+55 (11) 99999-9999'
	}
};

// Usar dados do Supabase ou dados padrão, garantindo que skills sejam arrays
const rawData = aboutData || defaultData;

// Função helper para garantir que skills sejam arrays
function ensureArray(value: any): string[] {
	if (Array.isArray(value)) return value;
	if (typeof value === 'string') return value.split(',').map((s: string) => s.trim()).filter(Boolean);
	return [];
}

const data = {
	...rawData,
	skills: {
		frontend: ensureArray(rawData.skills?.frontend) || defaultData.skills.frontend,
		backend: ensureArray(rawData.skills?.backend) || defaultData.skills.backend,
		database: ensureArray(rawData.skills?.database) || defaultData.skills.database,
		tools: ensureArray(rawData.skills?.tools) || defaultData.skills.tools
	}
};
---

<Layout title="Sobre - Ítalo Antonio" description="Conheça mais sobre Ítalo Antonio, desenvolvedor Full Stack apaixonado por tecnologia e inovação">
	<!-- Hero Section -->
	<section class="pt-32 pb-20 bg-gradient-to-br from-gray-950 via-gray-900 to-gray-950">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
				<!-- Text Content -->
				<div class="animate-fade-in">
					<h1 class="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
						Sobre Mim
					</h1>
					<h2 class="text-2xl md:text-3xl text-gray-300 mb-6 font-light">
						Ítalo Antonio - Desenvolvedor Full Stack
					</h2>
					<div class="space-y-4 text-gray-400 text-lg leading-relaxed">
						<p>{data.bio}</p>
					</div>

					<div class="flex flex-wrap gap-4 mt-8">
						<div class="flex items-center gap-2 text-primary-400">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
							</svg>
							<span>{data.socialLinks?.city || 'São Paulo, SP'}</span>
						</div>
						{data.socialLinks?.email && (
							<div class="flex items-center gap-2 text-primary-400">
								<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
								</svg>
								<span>{data.socialLinks.email}</span>
							</div>
						)}
					</div>
				</div>

				<!-- Profile Image -->
				<div class="relative">
					<div class="w-full max-w-md mx-auto">
						<div class="relative">
							<div class="w-full aspect-square bg-gradient-to-br from-primary-600/20 to-accent-cyan/20 rounded-2xl flex items-center justify-center border border-primary-500/30 overflow-hidden">
								{data.profileImage ? (
									   <OptimizedImage
										   src={data.profileImage}
										   alt="Foto de perfil"
										   width={400}
										   height={400}
										   class="w-full h-full object-cover"
									   />
								) : (
									<svg class="w-32 h-32 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
									</svg>
								)}
							</div>
							<div class="absolute -bottom-4 -right-4 w-24 h-24 bg-gradient-to-r from-primary-500 to-accent-cyan rounded-full flex items-center justify-center shadow-xl">
								<svg class="w-12 h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
								</svg>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- Skills Section -->
	<section class="py-20 bg-gray-900/50">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
					Minhas Habilidades
				</h2>
				<p class="text-gray-400 text-lg max-w-2xl mx-auto">
					Tecnologias e ferramentas que domino para criar soluções completas
				</p>
			</div>

			<div class="grid grid-cols-1 md:grid-cols-3 gap-8">
				<!-- Frontend -->
				<div class="bg-gradient-to-br from-primary-900/20 to-primary-800/20 p-8 rounded-xl border border-primary-700/30 hover:border-primary-500/50 transition-all duration-300">
					<div class="w-12 h-12 bg-gradient-to-r from-primary-500 to-primary-400 rounded-lg flex items-center justify-center mb-6">
						<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
						</svg>
					</div>
					<h3 class="text-xl font-semibold text-white mb-6">Frontend</h3>
					<div class="space-y-3">
						{(data.skills?.frontend || []).map((skill: string) => (
							<div class="flex items-center justify-between">
								<span class="text-gray-300">{skill}</span>
								<div class="flex gap-1">
									{[...Array(5)].map((_, i) => (
										<div class={`w-2 h-2 rounded-full ${i < 4 ? 'bg-primary-400' : 'bg-gray-600'}`}></div>
									))}
								</div>
							</div>
						))}
					</div>
				</div>

				<!-- Backend -->
				<div class="bg-gradient-to-br from-accent-cyan/20 to-accent-blue/20 p-8 rounded-xl border border-accent-cyan/30 hover:border-accent-cyan/50 transition-all duration-300">
					<div class="w-12 h-12 bg-gradient-to-r from-accent-cyan to-accent-blue rounded-lg flex items-center justify-center mb-6">
						<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"></path>
						</svg>
					</div>
					<h3 class="text-xl font-semibold text-white mb-6">Backend</h3>
					<div class="space-y-3">
						{(data.skills?.backend || []).map((skill: string) => (
							<div class="flex items-center justify-between">
								<span class="text-gray-300">{skill}</span>
								<div class="flex gap-1">
									{[...Array(5)].map((_, i) => (
										<div class={`w-2 h-2 rounded-full ${i < 4 ? 'bg-accent-cyan' : 'bg-gray-600'}`}></div>
									))}
								</div>
							</div>
						))}
					</div>
				</div>

				<!-- DevOps & Tools -->
				<div class="bg-gradient-to-br from-accent-indigo/20 to-accent-blue/20 p-8 rounded-xl border border-accent-indigo/30 hover:border-accent-indigo/50 transition-all duration-300">
					<div class="w-12 h-12 bg-gradient-to-r from-accent-indigo to-accent-blue rounded-lg flex items-center justify-center mb-6">
						<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z"></path>
						</svg>
					</div>
					<h3 class="text-xl font-semibold text-white mb-6">Ferramentas</h3>
					<div class="space-y-3">
						{(data.skills?.tools || []).map((skill: string) => (
							<div class="flex items-center justify-between">
								<span class="text-gray-300">{skill}</span>
								<div class="flex gap-1">
									{[...Array(5)].map((_, i) => (
										<div class={`w-2 h-2 rounded-full ${i < 3 ? 'bg-accent-indigo' : 'bg-gray-600'}`}></div>
									))}
								</div>
							</div>
						))}
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- Experience Timeline -->
	<section class="py-20 bg-gray-950">
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
					Jornada Profissional
				</h2>
				<p class="text-gray-400 text-lg">
					Minha trajetória no mundo do desenvolvimento
				</p>
			</div>

			<div class="relative">
				<div class="absolute left-8 top-0 bottom-0 w-0.5 bg-gradient-to-b from-primary-500 to-accent-cyan"></div>

				<div class="space-y-12">
						{(data.experience || []).map((experience: import('../lib/types').Experience, index: number) => {
						// Função para extrair ano de entrada do trabalho
						const getStartYear = (exp: import('../lib/types').Experience) => {
							// Primeiro tenta usar o campo year se existir
							if (exp.year) return exp.year;
							
							// Se não existir, tenta extrair do período
							if (exp.period) {
								// Procura por padrões como "2020", "Jan 2020", "2020 - Atual"
								const yearMatch = exp.period.match(/\b(20\d{2})\b/);
								if (yearMatch) return yearMatch[1];
							}
							
							// Fallback para ano atual
							return new Date().getFullYear().toString();
						};
						
						const startYear = getStartYear(experience);
						
						return (
						<div class="relative flex items-start gap-8">
							<div class="flex-shrink-0 w-16 h-16 bg-gradient-to-r from-primary-600 to-accent-cyan rounded-full flex items-center justify-center text-white font-bold shadow-lg">
								{startYear}
							</div>
							<div class="flex-grow bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50">
								<h3 class="text-xl font-semibold text-white mb-2">{experience.position || 'Cargo'}</h3>
								<p class="text-primary-400 mb-3 font-medium">{experience.company || 'Empresa'}</p>
								<p class="text-gray-400 leading-relaxed">{experience.description || 'Descrição da experiência'}</p>
							</div>
						</div>
						);
					})}
				</div>
			</div>
		</div>
	</section>

	<!-- Certifications Section -->
	<section class="py-20 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
					Certificações
				</h2>
				<p class="text-gray-400 text-lg max-w-2xl mx-auto">
					Certificações e qualificações que validam minhas competências técnicas
				</p>
			</div>

			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
				{(data.certifications || []).length > 0 ? (
					data.certifications.map((cert: { name?: string; title?: string; issuer?: string; date?: string; year?: string; description?: string; desc?: string; image?: string }) => (
						<div class="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50 hover:border-primary-500/50 transition-all duration-300 group">
							<div class="flex items-start gap-4">
								<div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-primary-500 to-accent-cyan rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
									<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
									</svg>
								</div>
								<div class="flex-grow">
									<h3 class="text-xl font-semibold text-white mb-2 group-hover:text-primary-400 transition-colors duration-300">
										{cert.name || cert.title || 'Certificação'}
									</h3>
									<p class="text-primary-400 mb-2 font-medium">
										{cert.issuer || 'Emissor'}
									</p>
									{(cert.date || cert.year) && (
										<p class="text-gray-400 text-sm mb-2">
											{cert.date || cert.year}
										</p>
									)}
									{(cert.description || cert.desc) && (
										<p class="text-gray-400 text-sm leading-relaxed">
											{cert.description || cert.desc}
										</p>
									)}
									{cert.image && (
										<div class="mt-4">
											   <OptimizedImage
												   src={cert.image}
												   alt={`Certificado ${cert.name || cert.title}`}
												   width={600}
												   height={200}
												   class="w-full h-48 object-contain rounded-lg border border-gray-600/50 bg-gray-800/30 p-2"
											   />
										</div>
									)}
								</div>
							</div>
						</div>
					))
				) : (
					<div class="col-span-full text-center py-12">
						<div class="w-16 h-16 bg-gradient-to-r from-primary-500/20 to-accent-cyan/20 rounded-full flex items-center justify-center mx-auto mb-4">
							<svg class="w-8 h-8 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
						</div>
						<h3 class="text-xl font-semibold text-white mb-2">Certificações em Breve</h3>
						<p class="text-gray-400">
							Configure suas certificações através do painel administrativo (/admin)
						</p>
					</div>
				)}
			</div>
		</div>
	</section>

	<!-- Education Section -->
	<section class="py-20 bg-gray-900/50">
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
					Formação Acadêmica
				</h2>
				<p class="text-gray-400 text-lg">
					Minha formação e qualificações educacionais
				</p>
			</div>

			<div class="space-y-8">
				    {(data.education || []).map((edu: any, index: number) => (
					<div class="bg-gradient-to-r from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50">
						<div class="flex items-start gap-4">
							<div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-accent-cyan to-accent-blue rounded-lg flex items-center justify-center">
								<svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
								</svg>
							</div>
							<div class="flex-grow">
								<h3 class="text-xl font-semibold text-white mb-2">{edu.course || 'Curso'}</h3>
								<p class="text-accent-cyan mb-2 font-medium">{edu.institution || 'Instituição'}</p>
								<p class="text-gray-400">{edu.period || 'Período'}</p>
							</div>
						</div>
					</div>
				))}
			</div>
		</div>
	</section>

	<!-- Values Section -->
	<section class="py-20 bg-gradient-to-r from-primary-900/20 to-accent-blue/20">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
					Valores e Princípios
				</h2>
				<p class="text-gray-400 text-lg max-w-2xl mx-auto">
					O que guia meu trabalho e minhas decisões
				</p>
			</div>

			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
				{[
					{
						icon: '🚀',
						title: 'Inovação',
						description: 'Sempre buscando novas tecnologias e abordagens para resolver problemas de forma criativa.'
					},
					{
						icon: '🎯',
						title: 'Qualidade',
						description: 'Comprometimento com código limpo, testes e melhores práticas de desenvolvimento.'
					},
					{
						icon: '🤝',
						title: 'Colaboração',
						description: 'Acredito no poder do trabalho em equipe e no compartilhamento de conhecimento.'
					},
					{
						icon: '📚',
						title: 'Aprendizado Contínuo',
						description: 'Dedicação constante ao aprendizado e evolução profissional.'
					}
				].map((value) => (
					<div class="bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700/50 hover:border-primary-500/50 transition-all duration-300 text-center">
						<div class="text-4xl mb-4">{value.icon}</div>
						<h3 class="text-xl font-semibold text-white mb-3">{value.title}</h3>
						<p class="text-gray-400 leading-relaxed">{value.description}</p>
					</div>
				))}
			</div>
		</div>
	</section>

	<!-- Gallery Section -->
	<section class="py-20 bg-gray-900/50">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center mb-16">
				<h2 class="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
					Galeria
				</h2>
				<p class="text-gray-400 text-lg max-w-2xl mx-auto">
					Alguns momentos e projetos que capturam minha jornada no desenvolvimento
				</p>
			</div>

			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
				{(data.gallery || []).length > 0 ? (
					(data.gallery as GalleryItem[]).map((item: GalleryItem, index: number) => (
						<div class="group relative overflow-hidden rounded-xl bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm border border-gray-700/50 hover:border-primary-500/50 transition-all duration-300">
							<div class="aspect-square overflow-hidden">
								{item.image ? (
									   <OptimizedImage
										   src={item.image}
										   alt={item.title || `Imagem ${index + 1}`}
										   width={400}
										   height={400}
										   class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
									   />
								) : (
									<div class="w-full h-full bg-gradient-to-br from-primary-900/20 to-accent-cyan/20 flex items-center justify-center">
										<svg class="w-16 h-16 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
										</svg>
									</div>
								)}
							</div>
							{(item.title || item.description) && (
								<div class="absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end">
									<div class="p-6 text-white">
										{item.title && (
											<h3 class="text-xl font-semibold mb-2">{item.title}</h3>
										)}
										{item.description && (
											<p class="text-gray-300 text-sm leading-relaxed">{item.description}</p>
										)}
									</div>
								</div>
							)}
						</div>
					))
				) : (
					<div class="col-span-full text-center py-12">
						<div class="w-16 h-16 bg-gradient-to-r from-primary-500/20 to-accent-cyan/20 rounded-full flex items-center justify-center mx-auto mb-4">
							<svg class="w-8 h-8 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
							</svg>
						</div>
						<h3 class="text-xl font-semibold text-white mb-2">Galeria em Breve</h3>
						<p class="text-gray-400">
							Adicione imagens à sua galeria através do painel administrativo (/admin)
						</p>
					</div>
				)}
			</div>
		</div>
	</section>

	<!-- CTA Section -->
	<section class="py-20 bg-gray-950">
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
			<h2 class="text-3xl md:text-4xl font-bold mb-6 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
				Vamos Conversar?
			</h2>
			<p class="text-gray-400 text-lg mb-8 max-w-2xl mx-auto">
				Estou sempre interessado em novos projetos, oportunidades de colaboração
				ou apenas uma conversa sobre tecnologia e desenvolvimento.
			</p>
			{data.socialLinks?.email && (
				<div class="mb-8">
					<div class="inline-flex items-center gap-2 text-primary-400 bg-primary-900/20 px-6 py-3 rounded-full border border-primary-500/30">
						<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
						</svg>
						<span class="font-medium">{data.socialLinks.email}</span>
					</div>
				</div>
			)}
			<div class="flex flex-col sm:flex-row gap-4 justify-center">
				<a href="/contato" class="bg-gradient-to-r from-primary-600 to-primary-500 hover:from-primary-500 hover:to-primary-400 text-white px-8 py-4 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-xl shadow-primary-500/25 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-400" aria-label="Entrar em contato" tabindex="0" role="button">
					Entrar em Contato
				</a>
				<a href="/projetos" class="border-2 border-gray-600 hover:border-primary-400 text-gray-300 hover:text-primary-400 px-8 py-4 rounded-lg font-semibold transition-all duration-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary-400" aria-label="Ver meus projetos" tabindex="0" role="button">
					Ver Meus Projetos
				</a>
			</div>
		</div>
	</section>
</Layout>
